package com.projecttango.permissionrequester;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.util.Log;import java.io.IOException;import java.io.OutputStreamWriter;import java.util.Iterator;import java.util.Set;public class RequestManagerActivity extends Activity{    public RequestManagerActivity()    {        mRanNormally = false;    }    public void onCreate(Bundle savedInstanceState)    {        super.onCreate(savedInstanceState);        mRanNormally = false;        Bundle command = getIntent().getExtras();        String classname = command.getString("classname");        String stringArgs = command.getString("string_args");        String args[] = stringArgs.split("\n");        Intent tangoIntent = new Intent();        tangoIntent.setClassName("com.projecttango.tango", classname);        for(int i = 0; i < stringArgs.length(); i++)        {            String keyVal[] = stringArgs.split(":");            if(keyVal.length == 2)                tangoIntent.putExtra(keyVal[0], keyVal[1]);        }        startActivityForResult(tangoIntent, 42);    }    public void writeAndQuit(String results)    {        try        {            OutputStreamWriter outputStreamWriter = new OutputStreamWriter(openFileOutput("activity_result", 0));            outputStreamWriter.write(results);            outputStreamWriter.close();        }        catch(IOException e)        {            Log.e("TangoUnity", (new StringBuilder("File write failed. You may want to try clearing the application's data. ")).append(e.toString()).toString());        }        finish();    }    public void onDestroy()    {        super.onDestroy();        if(!mRanNormally)        {            mRanNormally = true;            String results = "RESULT_CANCELED";            writeAndQuit(results);        }    }    public void onActivityResult(int requestCode, int resultCode, Intent data)    {        super.onActivityResult(requestCode, resultCode, data);        String results = "";        mRanNormally = true;        if(resultCode == 0)        {            results = (new StringBuilder(String.valueOf(results))).append("RESULT_CANCELED").toString();            writeAndQuit(results);            return;        }        results = (new StringBuilder(String.valueOf(results))).append("RESULT_OK\n").toString();        if(data != null)        {            Bundle extras = data.getExtras();            if(extras != null)            {                for(Iterator iter = extras.keySet().iterator(); iter.hasNext();)                {                    String key = (String)iter.next();                    results = (new StringBuilder(String.valueOf(results))).append(key).append(":").append(extras.getString(key)).append("\n").toString();                }            }        }        writeAndQuit(results);    }    private boolean mRanNormally;}